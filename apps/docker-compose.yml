services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: devsecrin
      POSTGRES_USER: devsecrin
      POSTGRES_PASSWORD: devsecrin
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ../packages/dbup/sql:/docker-entrypoint-initdb.d
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U devsecrin"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Ollama Service (for local AI model)
  ollama:
    image: ollama/ollama:latest
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    environment:
      - OLLAMA_HOST=0.0.0.0

  # API Service
  devsecrin-api:
    image: devsecrin-api:latest
    build:
      context: ../
      dockerfile: apps/api/Dockerfile
    ports:
      - "8000:8000"
    environment:
      - PYTHONPATH=/app
      - DATABASE_URL=postgresql://devsecrin:devsecrin@postgres:5432/devsecrin
      - OLLAMA_HOST=http://ollama:11434
      - OLLAMA_MODEL=deepseek-r1:1.5b
      - CHROMA_PERSIST_DIRECTORY=/app/chroma_store
      - API_HOST=0.0.0.0
      - API_PORT=8000
    volumes:
      - ../chroma_store:/app/chroma_store
      - ../logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
      ollama:
        condition: service_started
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Web Service
  devsecrin-web:
    image: devsecrin-web:latest
    build:
      context: ../
      dockerfile: apps/web/Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - devsecrin-api
    environment:
      - NEXT_PUBLIC_API_URL=http://api:8000

volumes:
  postgres_data:
  ollama_data:
